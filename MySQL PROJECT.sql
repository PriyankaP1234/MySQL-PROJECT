											-- PROJECT
									-- LIBRARY MANAGEMENT SYSTEM

-- CREATING A DATABASE NAMED LIBRARY

CREATE DATABASE LIBRARY;

USE LIBRARY;

-- CREATING TABLES FOR THE DATABASE

CREATE TABLE BRANCH (
BRANCH_NO INT PRIMARY KEY,
MANAGER_ID INT,
BRANCH_ADDRESS VARCHAR(100),
CONTACT_NO int
);


CREATE TABLE EMPLOYEE(
EMP_ID INT PRIMARY KEY,
EMP_NAME VARCHAR(50),
POSITION VARCHAR(30),
SALARY INT,
BRANCH_NO INT, FOREIGN KEY(BRANCH_NO) REFERENCES BRANCH(BRANCH_NO)
);


CREATE TABLE CUSTOMER(
CUSTOMER_ID INT PRIMARY KEY,
CUSTOMER_NAME VARCHAR(30),
CUSTOMER_ADDRESS VARCHAR(100),
REG_DATE date
);


CREATE TABLE ISSUE_STATUS(
ISSUE_ID INT PRIMARY KEY,
ISSUE_CUST INT , FOREIGN KEY(ISSUE_CUST) REFERENCES CUSTOMER(CUSTOMER_ID),
ISSUED_BOOK_NAME VARCHAR(200),
ISSUE_DATE DATE,
ISBN_BOOK INT ,FOREIGN KEY(ISBN_BOOK) REFERENCES BOOKS(ISBN)
);


CREATE TABLE RETURN_STATUS(
RETURN_ID INT PRIMARY KEY,
RETURN_CUST INT,FOREIGN KEY(RETURN_CUST) REFERENCES CUSTOMER(CUSTOMER_ID),
RETURN_BOOK_NAME VARCHAR(200),
RETURN_DATE DATE,
ISBN_BOOK2 INT,FOREIGN KEY(ISBN_BOOK2) REFERENCES BOOKS(ISBN)
);


CREATE TABLE BOOKS(
ISBN INT PRIMARY KEY,
BOOK_TITLE VARCHAR(200),
CATEGORY VARCHAR(150),
RENTAL_PRICE INT,
STATUS VARCHAR(5),
AUTHOR VARCHAR(50),
PUBLISHER VARCHAR(100)
);


-- INSERTING VALUES TO TABLE BRANCH
INSERT INTO BRANCH VALUES
(201,1001,'56 STREET VILLA',54873459),
(202,1002,'86 CHERAN NAGAR',465837597),
(203,1003,'34 S M STREET',86958594),
(204,1004,'ST 23 MALAY NAGAR',569753893),
(205,1005,'ST 67 JAYAS RESIDENCY',349583595);

SELECT * FROM BRANCH;


-- INSERTING VALUES TO EMPLOYEE TABLE
INSERT INTO EMPLOYEE VALUES
(101,'RAJ KUMAR','MANAGER',50000,201),
(102,'KEVIN VATT','CLERK',30000,203),
(103,'REMYA MADHAV','MANAGER',55000,202),
(104,'FEMIYA BHANU','CLERK',40000,204),
(105,'POOJA BHATT','MANAGER',50000,205),
(106,'HELEN SALVATORE','MANAGER',60000,203);

SELECT * FROM EMPLOYEE;


-- INSERTING VALUES TO CUSTOMER TABLE
INSERT INTO CUSTOMER VALUES
(2001,'ELENA GILBERT','344 PARISH STREET','2021-02-15'),
(2002,'DAMON DAC','76 JHOHANNAS STREET','2023-04-18'),
(2003,'HEERA DAS','34 GAGAN NAGAR','2023-06-27'),
(2004,'FIDHA RAO','311 COMMERCIAL STREET','2022-08-04'),
(2005,'JAGAN DEV','87 TERITTORY STREET','2023-01-01'),
(2006,'WILLIAM SNOW','555 S K STREET','2022-04-28'),
(2007,'JAMES PARKER','45 CHURCH STREET','2022-07-20'),
(2008,'MIKE SALAVATORE','122 MALLESHWAT NAGAR','2021-12-05');

SELECT * FROM CUSTOMER;


-- INSERTING VALUES TO ISSUE STATUS TABLE
INSERT INTO ISSUE_STATUS VALUES
(301,2004,'THE ALCHEMIST','2023-02-08',111),
(302,2001,'THE OLD MAN AND THE SEA','2021-05-20',222),
(303,2006,'THE GOD OF SMALL THINGS','2022-07-15',333),
(304,2003,'THE BLUE UMBRELLA','2023-09-11',444),
(305,2007,'A PASSAGE TO INDIA','2022-12-16',555),
(306,2002,'ZORBA THE GREEK','2023-06-22',666),
(307,2005,'THE PROPHET','2023-05-10',777);

SELECT * FROM ISSUE_STATUS;


-- INSERTING VALUES TO RETURN_STATUS TABLE
INSERT INTO RETURN_STATUS VALUES
(10,2006,'THE GOD OF SMALL THINGS','2022-10-10',333),
(11,2004,'THE ALCHEMIST','2023-04-13',111),
(12,2002,'ZORBA THE GREEK','2023-12-21',666),
(13,2001,'THE OLD MAN AND THE SEA','2021-08-07',222);

SELECT * FROM RETURN_STATUS;


-- INSERTING VALUES TO BOOKS TABLE 
INSERT INTO BOOKS VALUES
(111,'THE ALCHEMIST','NOVEL',12,'YES','PAULO COELHO','HARPERTORCH'),
(222,'THE OLD MAN AND THE SEA','FICTION',14,'YES','ERNEST HEMINGWAY','CHARLES SCRIBNERS SONS'),
(333,'THE GOD OF SMALL THINGS','NOVEL',15,'YES','ARUNDHATI ROY','HARPERCOLLINS'),
(444,'THE BLUE UMBRELLA','NOVEL',11,'YES','RUSKIN BOND','RUPA PUBLICATION'),
(555,'A PASSAGE TO INIDIA','NOVEL',13,'YES','E M FORSTER','EDWARD ARNOLD'),
(666,'ZORBA THE GREEK','NOVEL',11,'YES','NIKOS KAZANTZAKIS','SIMON&SCHUSTER'),
(777,'THE PROPHET','POEM',11,'NO','KAHLIL GIBRAN','ALFRED A KNOPF'),
(888,'THE FORGOTTEN HISTORY OF INDUA','HISTORY',14,'YES','ARUN ANAND','PRABHAT PRAKASHAN PVT LTD');

SELECT * FROM BOOKS;


-- 1. Retrieving the book title, category, and rental price of all available books.

SELECT BOOK_TITLE,CATEGORY,RENTAL_PRICE FROM BOOKS WHERE STATUS ='YES';


-- 2. Listing the employee names and their respective salaries in descending order of salary.

SELECT EMP_NAME,SALARY FROM EMPLOYEE ORDER BY SALARY DESC;


-- 3. Retrieving the book titles and the corresponding customers who have issued those books.

SELECT b.BOOK_TITLE,c.CUSTOMER_NAME FROM ISSUE_STATUS i JOIN BOOKS b ON i.ISBN_BOOK=b.ISBN 
JOIN CUSTOMER C ON i.ISSUE_CUST= c.CUSTOMER_ID;


-- 4. Displaying the total count of books in each category.

SELECT CATEGORY,COUNT(*) AS TOTAL_COUNT FROM BOOKS GROUP BY CATEGORY;


-- 5.Retrieving the employee names and their positions for the employees whose salaries are above Rs.50,000.

SELECT EMP_NAME,POSITION FROM EMPLOYEE WHERE SALARY>50000;


-- 6. Listing the customer names who registered before 2022-01-01 and have not issued any books yet.

SELECT CUSTOMER_NAME,REG_DATE FROM CUSTOMER WHERE REG_DATE <'2022-01-01' AND CUSTOMER_ID NOT IN 
(SELECT ISSUE_CUST FROM ISSUE_STATUS);


-- 7. Displaying the branch numbers and the total count of employees in each branch.

SELECT BRANCH_NO,COUNT(*)  AS TOTAL_EMPLOYEES FROM EMPLOYEE GROUP BY BRANCH_NO;
 
 
 -- 8. Display the names of customers who have issued books in the month of June 2023.
 
 SELECT CUSTOMER.CUSTOMER_NAME,ISSUE_STATUS.ISSUE_DATE FROM ISSUE_STATUS INNER JOIN CUSTOMER ON
 ISSUE_STATUS.ISSUE_CUST = CUSTOMER.CUSTOMER_ID WHERE month(ISSUE_STATUS.ISSUE_DATE) =6
 AND year(ISSUE_STATUS.ISSUE_DATE)=2023;
 
 
 -- 9.Retrieve book_title from book table containing history. 
 
 SELECT BOOK_TITLE FROM BOOKS WHERE CATEGORY ='HISTORY';
 
 
 -- 10. Retrieve the branch numbers along with the count of employees for branches having more than 5 employees.
 
 SELECT BRANCH_NO,COUNT(*) AS TOTAL_EMPLOYEE FROM EMPLOYEE GROUP BY BRANCH_NO HAVING COUNT(*)>5;
 
 
 
    
    
 
 
 
 
 